name: Selenium E2E Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run tests daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  # Job para testes de automação com Selenium
  selenium-tests:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'maven'
        
    - name: Install Chrome
      uses: browser-actions/setup-chrome@latest
      
    - name: Run Selenium tests
      run: mvn clean test -Dbrowser=chrome -Dheadless=true
      
    - name: Upload screenshots on failure
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: selenium-screenshots
        path: target/screenshots
        if-no-files-found: ignore
        
    - name: Upload extent reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: extent-reports
        path: target/extent-reports
        if-no-files-found: ignore
        
    - name: Upload cucumber reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: cucumber-reports
        path: target/cucumber-reports
        if-no-files-found: ignore

  # Job para geração de relatórios consolidados
  test-summary:
    runs-on: ubuntu-latest
    needs: [selenium-tests]
    if: always()
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'maven'
        
    - name: Download test artifacts
      uses: actions/download-artifact@v4
      with:
        name: cucumber-reports
        path: target/cucumber-reports
      continue-on-error: true
        
    - name: Generate combined report
      run: |
        echo "Generating combined test report..."
        ls -la target/cucumber-reports/ || echo "No cucumber reports found"
        
    - name: Upload combined report
      uses: actions/upload-artifact@v4
      with:
        name: combined-test-report
        path: target/
        
    - name: Comment PR with test results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          
          // Verificar se o arquivo de relatório existe
          const reportPath = 'target/cucumber-reports/cucumber-report.json';
          if (fs.existsSync(reportPath)) {
            const report = JSON.parse(fs.readFileSync(reportPath, 'utf8'));
            
            let totalScenarios = 0;
            let passedScenarios = 0;
            let failedScenarios = 0;
            
            report.forEach(feature => {
              feature.elements.forEach(scenario => {
                totalScenarios++;
                const failed = scenario.steps.some(step => step.result.status === 'failed');
                if (failed) {
                  failedScenarios++;
                } else {
                  passedScenarios++;
                }
              });
            });
            
            const successRate = totalScenarios > 0 ? ((passedScenarios / totalScenarios) * 100).toFixed(1) : 0;
              
            const comment = `## Resultados dos Testes Selenium
            
            | Métrica | Valor |
            |---------|-------|
            | Cenários Aprovados | ${passedScenarios} |
            | Cenários Falharam | ${failedScenarios} |
            | Taxa de Sucesso | ${successRate}% |
            
            ${failedScenarios > 0 ? '⚠️ Alguns testes falharam. Verifique o relatório detalhado.' : '✅ Todos os testes passaram!'}
            
            **Detalhes:**
            - Total de Cenários: ${totalScenarios}
            - Features Executadas: ${report.length}
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
          } else {
            console.log('Arquivo de relatório não encontrado:', reportPath);
          }
